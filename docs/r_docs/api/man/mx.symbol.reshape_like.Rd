% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mxnet_generated.R
\name{mx.symbol.reshape_like}
\alias{mx.symbol.reshape_like}
\title{reshape_like:Reshape some or all dimensions of `lhs` to have the same shape as some or all dimensions of `rhs`.}
\usage{
mx.symbol.reshape_like(...)
}
\arguments{
\item{lhs}{NDArray-or-Symbol
First input.}

\item{rhs}{NDArray-or-Symbol
Second input.}

\item{lhs.begin}{int or None, optional, default='None'
Defaults to 0. The beginning index along which the lhs dimensions are to be reshaped. Supports negative indices.}

\item{lhs.end}{int or None, optional, default='None'
Defaults to None. The ending index along which the lhs dimensions are to be used for reshaping. Supports negative indices.}

\item{rhs.begin}{int or None, optional, default='None'
Defaults to 0. The beginning index along which the rhs dimensions are to be used for reshaping. Supports negative indices.}

\item{rhs.end}{int or None, optional, default='None'
Defaults to None. The ending index along which the rhs dimensions are to be used for reshaping. Supports negative indices.}

\item{name}{string, optional
Name of the resulting symbol.}
}
\value{
out The result mx.symbol
}
\description{
Returns a **view** of the `lhs` array with a new shape without altering any data.
}
\details{
Example::

  x = [1, 2, 3, 4, 5, 6]
  y = [[0, -4], [3, 2], [2, 2]]
  reshape_like(x, y) = [[1, 2], [3, 4], [5, 6]]

More precise control over how dimensions are inherited is achieved by specifying \
slices over the `lhs` and `rhs` array dimensions. Only the sliced `lhs` dimensions \
are reshaped to the `rhs` sliced dimensions, with the non-sliced `lhs` dimensions staying the same.

  Examples::

  - lhs shape = (30,7), rhs shape = (15,2,4), lhs_begin=0, lhs_end=1, rhs_begin=0, rhs_end=2, output shape = (15,2,7)
  - lhs shape = (3, 5), rhs shape = (1,15,4), lhs_begin=0, lhs_end=2, rhs_begin=1, rhs_end=2, output shape = (15)

Negative indices are supported, and `None` can be used for either `lhs_end` or `rhs_end` to indicate the end of the range.

  Example::

  - lhs shape = (30, 12), rhs shape = (4, 2, 2, 3), lhs_begin=-1, lhs_end=None, rhs_begin=1, rhs_end=None, output shape = (30, 2, 2, 3)



Defined in src/operator/tensor/elemwise_unary_op_basic.cc:L513
}
