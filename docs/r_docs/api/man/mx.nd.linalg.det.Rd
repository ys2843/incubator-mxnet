% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mxnet_generated.R
\name{mx.nd.linalg.det}
\alias{mx.nd.linalg.det}
\title{Compute the determinant of a matrix.
Input is a tensor *A* of dimension *n >= 2*.}
\arguments{
\item{A}{NDArray-or-Symbol
Tensor of square matrix}
}
\value{
out The result mx.ndarray
}
\description{
If *n=2*, *A* is a square matrix. We compute:
}
\details{
*out* = *det(A)*

If *n>2*, *det* is performed separately on the trailing two dimensions
for all inputs (batch mode).

.. note:: The operator supports float32 and float64 data types only.
.. note:: There is no gradient backwarded when A is non-invertible (which is
          equivalent to det(A) = 0) because zero is rarely hit upon in float
          point computation and the Jacobi's formula on determinant gradient
          is not computationally efficient when A is non-invertible.

Examples::

   Single matrix determinant
   A = [[1., 4.], [2., 3.]]
   det(A) = [-5.]

   Batch matrix determinant
   A = [[[1., 4.], [2., 3.]],
        [[2., 3.], [1., 4.]]]
   det(A) = [-5., 5.]


Defined in src/operator/tensor/la_op.cc:L975
}
