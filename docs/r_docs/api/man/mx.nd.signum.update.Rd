% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mxnet_generated.R
\name{mx.nd.signum.update}
\alias{mx.nd.signum.update}
\title{SIGN momentUM (Signum) optimizer.}
\arguments{
\item{weight}{NDArray-or-Symbol
Weight}

\item{grad}{NDArray-or-Symbol
Gradient}

\item{mom}{NDArray-or-Symbol
Momentum}

\item{lr}{float, required
Learning rate}

\item{momentum}{float, optional, default=0
The decay rate of momentum estimates at each epoch.}

\item{wd}{float, optional, default=0
Weight decay augments the objective function with a regularization term that penalizes large weights. The penalty scales with the square of the magnitude of each weight.}

\item{rescale.grad}{float, optional, default=1
Rescale gradient to grad = rescale_grad*grad.}

\item{clip.gradient}{float, optional, default=-1
Clip gradient to the range of [-clip_gradient, clip_gradient] If clip_gradient <= 0, gradient clipping is turned off. grad = max(min(grad, clip_gradient), -clip_gradient).}

\item{wd.lh}{float, optional, default=0
The amount of weight decay that does not go into gradient/momentum calculationsotherwise do weight decay algorithmically only.}
}
\value{
out The result mx.ndarray
}
\description{
.. math::
}
\details{
g_t = \nabla J(W_{t-1})\\
 m_t = \beta m_{t-1} + (1 - \beta) g_t\\
 W_t = W_{t-1} - \eta_t \text{sign}(m_t)

It updates the weights using::
 state = momentum * state + (1-momentum) * gradient
 weight = weight - learning_rate * sign(state)

Where the parameter ``momentum`` is the decay rate of momentum estimates at each epoch.

.. note::
   - sparse ndarray not supported for this optimizer yet.


Defined in src/operator/optimizer_op.cc:L92
}
